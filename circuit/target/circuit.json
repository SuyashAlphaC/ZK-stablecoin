{"noir_version":"1.0.0-beta.8+ba05d729b9753aa5ce2b076c1dd4795edb173f68","hash":"12776494723261926892","abi":{"parameters":[{"name":"total_dsc_minted","type":{"kind":"field"},"visibility":"public"},{"name":"collateral_value_in_usd","type":{"kind":"field"},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/91XUXKCMBANghWh8FOdXiMhBJOvehVBOGbP1jJm250YdGw2M213xlkI8Hj73pLEhF2i/vy92uPM5oRdB4wdbeZhIQixOOa7ikl4FQE3RViSd207HppRSHHijem14q3qOy20UFqdGy3lqFt9ML05cCNaOYpJGTlZsFh1p0hgIlz+H5otw/xd0qFmpsQCxBA1i1D3mtAs5NXXzBDDn1Csp1/u9ezJUwSvCevm0Isr5HmwDt3EVa/MWfbNfJos9DwPjCxSz7MwnsIdwNpubM5B6NTm+cK7M5YjErFMCfzAudOcYsPoGj1nf2NSo6x5e6PmR7FxL21tfz2yg6DUhaIWiCIm4cLTIKHkC0a3qpSE9cbSsGT3J6xH31My2smAerXPbd33eudeyEGM/NQNfLoEpd/PhBriyWXGfWPfqzxe8SBi6P1TrKkRU2vaQWkzzOceulFW/8rmGgQBASub8ViNSECkYeSuyGIRQ1f+itE1ak1sbowteMXom5pyaw87PBy+bb7v+tbJe/QM5V9swN/FwecbT417dLxz6sT6HIk4AB58u2u2rPvauTd3+CX0/ITLJfW8C+LF5h0a2y9wLRAOoacN4Jdx8L09U6Dj0rkG3mWe55KF85WTb917a6deea4BJniF+UIdH3uUk3fJFgAA","debug_symbols":"pZPdjoMgEEbfZa65AH9QfJXNxqBiQ0LQUG2yMX33HQfZbS+aNPbmO8JwJgFhg8F066W1fpyu0Hxt0AXrnL20bur1YiePs9udQRq2SzAGp+Chjtasg/ELNH51jsFNu5UWXWftiYsOWOUMjB+Q2HC0zuxfd/Zv89eqFEmWufjTy/d9VR5+VWSn/CL5sjrhV6o+/LrIT/lV8uUZv67F4SsuPvMz9eR/40j3NjzdGODQoCAoM8oclzMoKEtKSVnh4TKoKRWl4BEiIovII4qIMkJGxB4Cm+ApCUXIeISIwC77f7vpYHXnzHGtx9X3D7d8+ZlTJb2DOUy9GdZg9v1RDXf8Cw==","file_map":{"50":{"source":"global LIQUIDATION_THRESHOLD: Field = 50;\nglobal LIQUIDATION_PRECISION: Field = 100;\nglobal PRECISION: Field = 1_000_000_000_000_000_000; // 1e18\nglobal MIN_HEALTH_FACTOR: Field = 1_000_000_000_000_000_000; // 1e18\n\n/*\n * @param total_dsc_minted The total amount of DSC the user has minted.\n * @param collateral_value_in_usd The total value in USD of the user's collateral.\n *\n * This function proves that the health factor calculated from the public inputs\n * is greater than or equal to the minimum required health factor.\n*/\nfn main(total_dsc_minted: pub Field, collateral_value_in_usd: pub Field) {\n    if total_dsc_minted != 0 {\n        let collateral_adjusted_for_threshold =\n            (collateral_value_in_usd * LIQUIDATION_THRESHOLD) / LIQUIDATION_PRECISION;\n        let health_factor = (collateral_adjusted_for_threshold * PRECISION) / total_dsc_minted;\n\n        assert(health_factor as u64 >= MIN_HEALTH_FACTOR as u64);\n    }\n    // If total_dsc_minted == 0, the health factor is considered infinite and valid, so we add no constraint.\n}\n\n#[test]\nfn test_main() {\n    let total_dsc_minted = 101 * 1_000_000_000_000_000_000;\n    let collateral_value_in_usd = 200_000_000_000_000_000_000;\n\n    main(total_dsc_minted, collateral_value_in_usd);\n}\n","path":"/home/itsmesuyash/Documents/ZK-StableCoin/circuit/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert","directive_integer_quotient"]}